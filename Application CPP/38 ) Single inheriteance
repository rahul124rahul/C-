/* 
Single Inhertance Deep Dive Example
 */

#include<iostream>
using namespace std;

class Base{
    int data1;      // It is private by default and is not inheritable 
    public:
        int data2;
        void setdata(void);
        int getdata1(void);
        int getdata2(void);
};

void Base::setdata(void){
    data1=10;
    data2=30;
}

int Base :: getdata1(){
    return data1;
}

int Base :: getdata2(){
    return data2;
}

class derived : public Base{
    int data3;
    public:
        void process();
        void display();
};

void derived :: process(){
    data3=data2*getdata1();
}

void derived :: display(){
    cout<<"Value of data1 is "<<getdata1()<<endl;
    cout<<"Value of data2 is "<<data2<<endl;
    cout<<"Value of data3 is "<<data3<<endl;

}
int main(){
    derived d;
    d.setdata();
    d.process();
    d.display();
    return 0;
}


Output :

Value of data1 is 10
Value of data2 is 30
Value of data3 is 300
