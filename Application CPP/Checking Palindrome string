/*	A palindrome is a string of character that's the same forward and backward. Typically, punctuation, capitalization, and spaces are ignored. 
For example, "Poor Dan is in a droop" is a palindrome, as can be seen by examining the characters "poor danisina droop" and observing that they are
the same forward and backward. One way to check for a palindrome is to reverse the characters in the string and then compare with them the original-in
a palindrome, the sequence will be identical. Write C++ program with functions- 
	a) To print original string followed by reversed string using stack 
	b) To check whether given string is palindrome or not		*/

#include<iostream>
#include<string.h>
#define max 50
using namespace std;

class STACK{
	private:
		char a[max],str[max];
		int top;
	public:
		STACK(){
			top=-1;	
		}	
		void convert(char[]);
		void push(char);
		void reverse();	
		void palindrome();
};

void STACK::convert(char str[]){		// This function will convert whole sting in lower letters and removes the white ( blank ) spaces.
	int j,k,len = strlen(str);

	for(j=0, k=0; j<len; j++)	{
		if( ( (int)str[j] >= 97 && (int)str[j] <=122 ) || ( (int)str[j] >= 65 && (int)str[j] <=90 ))
		{
			if( (int)str[j] <=90 )
			{
				str[k] = (char)( (int)str[j] + 32 );
			}
			else{
				str[k] = str[j];				
			}

			k++;			
		}
	}
	str[k]='\0';
	cout<<"Converted Original String is : "<<str<<"\n";
}


void STACK::push(char c){
	top++;
	a[top] = c;
	a[top+1]='\0';
}

void STACK::reverse(){
	cout<<"Reverse string is : ";
	for(int i=top,j=0; i>=0; i--,j++)	{
		cout<<a[i];
		str[j]=a[i];				// I think here str is overloaded by reverse element
	}
	cout<<endl;
}


void STACK::palindrome(){	
	if(strcmp(str,a) == 0)			
		cout<<"String is palindrome...";
	else
		cout<<"String is not palindrome...";
}


int main(){
	STACK stack;

	char str[max];
	int i=0;
	
	cout<<"\nEnter string to reverse and check is it palindrome or not : ";
	cin.getline(str , 50);

	stack.convert(str);
	
	while(str[i] != '\0'){
		stack.push(str[i]);
		i++;
	}
	stack.reverse();
	stack.palindrome();	
	return 0;
}



Output :

(1)

Enter string to reverse and check is it palindrome or not : Samrat
Converted Original String is : samrat
Reverse string is : tarmas
String is not palindrome...


(2)

Enter string to reverse and check is it palindrome or not : qwertrewq
Converted Original String is : qwertrewq
Reverse string is : qwertrewq
String is palindrome...
