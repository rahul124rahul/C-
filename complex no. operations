/* Implement a class Complex which represents the Complex Number data type.
Implement the following operations:
1. Constructor (including a default constructor which creates the complex number 0+0i).
2. Overloaded operator+ to add two complex numbers.
3. Overloaded operator* to multiply two complex numbers.
4. Overloaded << and >> to print and read Complex Numbers.
*/

#include<iostream>
using namespace std;

class complex{
    float real,img;
    public:
        complex(){
            real=img=0;
        }

        complex operator + (complex);
        complex operator * (complex);
        friend ostream & operator << (ostream & , complex &);
        friend istream & operator >> (istream & , complex &);
};

complex complex :: operator + (complex obj){
    complex temp;
    temp.real = real + obj.real;
    temp.img = img + obj.img;
    return temp;
}

complex complex :: operator * (complex obj){
    complex temp;
    temp.real = real*obj.real - img*obj.img;
    temp.img = real*obj.img + img*obj.real;
    return temp;
}

istream & operator >> (istream & is , complex & obj){
    is >> obj.real ;
    is >> obj.img;
    return is;  
}

ostream & operator << (ostream & out , complex & obj){
    out << obj.real<<"+";
    out << obj.img<<"i";
    return out;
}

int main(){
    complex p,q,r,s;
    cout<<"Enter 1st complex no. (real img) : ";
    cin>>p;
    cout<<"Enter 2nd commplex no. (real img) : ";
    cin>>q;

    cout<<"\nOur Arithmetic operations are : \n";
    r=p+q;
    cout<<"Addition of two complex no. is : ";
    cout<<r;

    s=p*q;
    cout<<"\nMultiplication of the complex no. is : ";
    cout<<s<<endl;

    return 0;
}


Output : 

Enter 1st complex no. (real img) : 3 2
Enter 2nd commplex no. (real img) : 4 5

Our Arithmetic operations are : 
Addition of two complex no. is : 7+7i
Multiplication of the complex no. is : 2+23i
